name: "GSTUI Tests and Deployment"

on:
  push:

env:
  PYTHON_VERSION: 3.10
  POETRY_VERSION: 1.2.1
  POETRY_URL: https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py

jobs:

jobs:
  run-tests:
    runs-on: ubuntu-latest
  steps:
    - name: Checkout
      uses: actions/checkout@v2
    # Poetry cache depends on OS, Python version and Poetry version.
    - name: Cache Poetry cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/pypoetry
        key: poetry-cache-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ env.POETRY_VERSION }}
    # virtualenv cache should depends on OS, Python version and `poetry.lock` (and optionally workflow files).
    - name: Cache Packages
      uses: actions/cache@v2
      with:
        path: ~/.local
        key: poetry-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('.github/workflows/*.yml') }}
    - name: Set up Python 3.10
      uses: actions/setup-python@v1
      with:
        python-version: ${{ POETRY_VERSION }}
    - name: Install Poetry
      run: |
        curl -sSL ${{ env.POETRY_URL }} | python - --version ${{ env.POETRY_VERSION }}
        echo "$HOME/.local/bin" >> $GITHUB_PATH
    - name: Install dependencies
      run: |
        poetry install
    - name: Test Build
        poetry build
    - name: Run tests
      run: |
        poetry run tests
    - name: Deploy to PyPI
      if: startsWith(github.ref, 'refs/tags/v') && github.ref == 'refs/heads/main'
      uses: JRubics/poetry-publish@v1.13
      with:
        user: mattfly
        password: ${{ secrets.pypi_password }}
